apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-mesh-control-plane
  namespace: kong-mesh-system
  labels:
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: kong-mesh
    app: kuma-control-plane
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kong-mesh
      app.kubernetes.io/instance: kong-mesh
      app: kuma-control-plane
  template:
    metadata:
      annotations:
        checksum/config: a8c332b04d709a1da917eecc6f00a096d73871531d325d8728bb16c7f86c99f1
        checksum/tls-secrets: 56bbeac1201028a37b2bc2db03642c9d650cf7ea3847ed8682b2f70eee55663b
      labels:
        app.kubernetes.io/name: kong-mesh
        app.kubernetes.io/instance: kong-mesh
        app: kuma-control-plane
    spec:
      serviceAccountName: kong-mesh-control-plane
      nodeSelector:
        
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: control-plane
          image: "docker.io/kong/kuma-cp:1.4.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: KUMA_API_SERVER_READ_ONLY
              value: "true"
            - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
              value: "false"
            - name: KUMA_DP_SERVER_HDS_ENABLED
              value: "false"
            - name: KUMA_ENVIRONMENT
              value: "kubernetes"
            - name: KUMA_GENERAL_TLS_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.crt"
            - name: KUMA_GENERAL_TLS_KEY_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.key"
            - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
              value: "docker.io/kong/kuma-init:1.4.1"
            - name: KUMA_MODE
              value: "zone"
            - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
              value: "grpcs://localhost:1234"
            - name: KUMA_MULTIZONE_ZONE_NAME
              value: "zone1"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
              value: "/var/run/secrets/kuma.io/tls-cert"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
              value: "5443"
            - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
              value: "kong-mesh-control-plane"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/ca.crt"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
              value: "false"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
              value: "docker.io/kong/kuma-dp:1.4.1"
            - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
              value: "kong-mesh-system"
            - name: KUMA_STORE_TYPE
              value: "kubernetes"
          args:
            - run
            - --log-level=info
            - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
          ports:
            - containerPort: 5681
            - containerPort: 5682
            - containerPort: 5443
            - containerPort: 5678
            - containerPort: 5653
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /healthy
              port: 5680
          readinessProbe:
            httpGet:
              path: /ready
              port: 5680
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
            - name: kong-mesh-control-plane-config
              mountPath: /etc/kuma.io/kuma-control-plane
              readOnly: true
      volumes:
        - name: general-tls-cert
          secret:
            secretName: kong-mesh-tls-cert
        - name: kong-mesh-control-plane-config
          configMap:
            name: kong-mesh-control-plane-config
